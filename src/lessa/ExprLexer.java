package lessa;

// Generated from Expr.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, ADDMINOP=12, MULDIVOP=13, CLASS=14, DEF=15, RETURN=16, 
		CONTINUE=17, FOR=18, WHILE=19, BREAK=20, IN=21, IF=22, ELSE=23, ELIF=24, 
		NOT=25, AND=26, OR=27, DEL=28, THIS=29, FROM=30, IMPORT=31, AS=32, GLOBAL=33, 
		IS=34, NONE=35, TRUE=36, FALSE=37, NUMBER=38, FLOAT=39, NOTE=40, NAME=41, 
		ID=42, PLUSASSIGN=43, MINUSASSIGN=44, TIMESASSIGN=45, DIVIDEASSIGN=46, 
		MOD_ASSIGN=47, POWER=48, TIMES=49, DIVIDE=50, PLUS=51, MINUS=52, MOD=53, 
		EQUAL=54, NOTEQUAL=55, LE=56, GE=57, ASSIGN=58, LESS=59, GREATER=60, SHARP=61, 
		FLAT=62, COMMA=63, SEMICOLON=64, STRING=65, ESC=66, SKIP=67, NEWLINE=68, 
		LINE_BAR=69;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "ADDMINOP", "MULDIVOP", "CLASS", "DEF", "RETURN", "CONTINUE", 
		"FOR", "WHILE", "BREAK", "IN", "IF", "ELSE", "ELIF", "NOT", "AND", "OR", 
		"DEL", "THIS", "FROM", "IMPORT", "AS", "GLOBAL", "IS", "NONE", "TRUE", 
		"FALSE", "NUMBER", "FLOAT", "NOTE", "NAME", "ID", "INT", "DEC_INT", "OCT_INT", 
		"HEX_INT", "NONZERO_DIGIT", "OCT_DIGIT", "HEX_DIGIT", "PLUSASSIGN", "MINUSASSIGN", 
		"TIMESASSIGN", "DIVIDEASSIGN", "MOD_ASSIGN", "POWER", "TIMES", "DIVIDE", 
		"PLUS", "MINUS", "MOD", "EQUAL", "NOTEQUAL", "LE", "GE", "ASSIGN", "LESS", 
		"GREATER", "SHARP", "FLAT", "COMMA", "SEMICOLON", "STRING", "STRING_GUTS", 
		"ESC", "SKIP", "NEWLINE", "CMT", "SCMT", "SPACES", "LINE_BAR", "LINE_JOINING", 
		"DIGIT", "EXPONENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'@'", "'('", "')'", "'.'", "'{'", "'}'", "':'", "'<>'", "'''", 
		"'['", "']'", null, null, "'class'", "'def'", "'return'", "'continue'", 
		"'for'", "'while'", "'break'", "'in'", "'if'", "'else'", "'elif'", "'not'", 
		"'and'", "'or'", "'del'", "'this'", "'from'", "'import'", "'as'", "'global'", 
		"'is'", "'None'", "'True'", "'False'", null, null, null, null, null, "'+='", 
		"'-='", "'*='", "'/='", "'%='", "'**'", "'*'", "'/'", "'+'", "'-'", "'%'", 
		"'=='", "'!='", "'<='", "'>='", "'='", "'<'", "'>'", "'#'", "'~'", "','", 
		"';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"ADDMINOP", "MULDIVOP", "CLASS", "DEF", "RETURN", "CONTINUE", "FOR", "WHILE", 
		"BREAK", "IN", "IF", "ELSE", "ELIF", "NOT", "AND", "OR", "DEL", "THIS", 
		"FROM", "IMPORT", "AS", "GLOBAL", "IS", "NONE", "TRUE", "FALSE", "NUMBER", 
		"FLOAT", "NOTE", "NAME", "ID", "PLUSASSIGN", "MINUSASSIGN", "TIMESASSIGN", 
		"DIVIDEASSIGN", "MOD_ASSIGN", "POWER", "TIMES", "DIVIDE", "PLUS", "MINUS", 
		"MOD", "EQUAL", "NOTEQUAL", "LE", "GE", "ASSIGN", "LESS", "GREATER", "SHARP", 
		"FLAT", "COMMA", "SEMICOLON", "STRING", "ESC", "SKIP", "NEWLINE", "LINE_BAR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2G\u021c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\5\16\u00c6\n\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3"+
		"$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\5\'\u0141\n\'\3(\6(\u0144\n"+
		"(\r(\16(\u0145\3(\3(\6(\u014a\n(\r(\16(\u014b\3(\5(\u014f\n(\3)\3)\3)"+
		"\3)\3)\5)\u0156\n)\3)\3)\3*\3*\3+\3+\7+\u015e\n+\f+\16+\u0161\13+\3,\3"+
		",\3,\5,\u0166\n,\3-\3-\7-\u016a\n-\f-\16-\u016d\13-\3-\5-\u0170\n-\3."+
		"\3.\3.\6.\u0175\n.\r.\16.\u0176\3.\3.\6.\u017b\n.\r.\16.\u017c\5.\u017f"+
		"\n.\3/\3/\3/\6/\u0184\n/\r/\16/\u0185\3\60\3\60\3\61\3\61\3\62\3\62\3"+
		"\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3"+
		"\67\38\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3@"+
		"\3A\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3I\3I\3J\3J"+
		"\7J\u01ca\nJ\fJ\16J\u01cd\13J\3K\3K\3K\3L\3L\3L\3L\3L\3L\5L\u01d8\nL\3"+
		"L\3L\3M\6M\u01dd\nM\rM\16M\u01de\3N\3N\3N\3N\7N\u01e5\nN\fN\16N\u01e8"+
		"\13N\3N\3N\3N\3O\3O\3O\3O\7O\u01f1\nO\fO\16O\u01f4\13O\3P\6P\u01f7\nP"+
		"\rP\16P\u01f8\3Q\3Q\7Q\u01fd\nQ\fQ\16Q\u0200\13Q\3Q\5Q\u0203\nQ\3R\3R"+
		"\5R\u0207\nR\3R\5R\u020a\nR\3R\3R\5R\u020e\nR\3S\6S\u0211\nS\rS\16S\u0212"+
		"\3T\5T\u0216\nT\3T\6T\u0219\nT\rT\16T\u021a\3\u01e6\2U\3\3\5\4\7\5\t\6"+
		"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
		"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K"+
		"\'M(O)Q*S+U,W\2Y\2[\2]\2_\2a\2c\2e-g.i/k\60m\61o\62q\63s\64u\65w\66y\67"+
		"{8}9\177:\u0081;\u0083<\u0085=\u0087>\u0089?\u008b@\u008dA\u008fB\u0091"+
		"C\u0093\2\u0095D\u0097E\u0099F\u009b\2\u009d\2\u009f\2\u00a1G\u00a3\2"+
		"\u00a5\2\u00a7\2\3\2\21\4\2--//\5\2\'\',,\61\61\4\2CIci\7\2ggjjssuuyy"+
		"\4\2TTtt\5\2C\\aac|\6\2\62;C\\aac|\4\2QQqq\4\2ZZzz\3\2\63;\3\2\629\5\2"+
		"\62;CHch\4\2$$^^\4\2\f\f\17\17\4\2\13\13\"\"\u022f\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2e\3\2\2\2\2"+
		"g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3"+
		"\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3"+
		"\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2"+
		"\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091"+
		"\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u00a1\3\2\2"+
		"\2\3\u00a9\3\2\2\2\5\u00ab\3\2\2\2\7\u00ad\3\2\2\2\t\u00af\3\2\2\2\13"+
		"\u00b1\3\2\2\2\r\u00b3\3\2\2\2\17\u00b5\3\2\2\2\21\u00b7\3\2\2\2\23\u00ba"+
		"\3\2\2\2\25\u00bc\3\2\2\2\27\u00be\3\2\2\2\31\u00c0\3\2\2\2\33\u00c5\3"+
		"\2\2\2\35\u00c7\3\2\2\2\37\u00cd\3\2\2\2!\u00d1\3\2\2\2#\u00d8\3\2\2\2"+
		"%\u00e1\3\2\2\2\'\u00e5\3\2\2\2)\u00eb\3\2\2\2+\u00f1\3\2\2\2-\u00f4\3"+
		"\2\2\2/\u00f7\3\2\2\2\61\u00fc\3\2\2\2\63\u0101\3\2\2\2\65\u0105\3\2\2"+
		"\2\67\u0109\3\2\2\29\u010c\3\2\2\2;\u0110\3\2\2\2=\u0115\3\2\2\2?\u011a"+
		"\3\2\2\2A\u0121\3\2\2\2C\u0124\3\2\2\2E\u012b\3\2\2\2G\u012e\3\2\2\2I"+
		"\u0133\3\2\2\2K\u0138\3\2\2\2M\u0140\3\2\2\2O\u0143\3\2\2\2Q\u0150\3\2"+
		"\2\2S\u0159\3\2\2\2U\u015b\3\2\2\2W\u0165\3\2\2\2Y\u016f\3\2\2\2[\u017e"+
		"\3\2\2\2]\u0180\3\2\2\2_\u0187\3\2\2\2a\u0189\3\2\2\2c\u018b\3\2\2\2e"+
		"\u018d\3\2\2\2g\u0190\3\2\2\2i\u0193\3\2\2\2k\u0196\3\2\2\2m\u0199\3\2"+
		"\2\2o\u019c\3\2\2\2q\u019f\3\2\2\2s\u01a1\3\2\2\2u\u01a3\3\2\2\2w\u01a5"+
		"\3\2\2\2y\u01a7\3\2\2\2{\u01a9\3\2\2\2}\u01ac\3\2\2\2\177\u01af\3\2\2"+
		"\2\u0081\u01b2\3\2\2\2\u0083\u01b5\3\2\2\2\u0085\u01b7\3\2\2\2\u0087\u01b9"+
		"\3\2\2\2\u0089\u01bb\3\2\2\2\u008b\u01bd\3\2\2\2\u008d\u01bf\3\2\2\2\u008f"+
		"\u01c1\3\2\2\2\u0091\u01c3\3\2\2\2\u0093\u01cb\3\2\2\2\u0095\u01ce\3\2"+
		"\2\2\u0097\u01d7\3\2\2\2\u0099\u01dc\3\2\2\2\u009b\u01e0\3\2\2\2\u009d"+
		"\u01ec\3\2\2\2\u009f\u01f6\3\2\2\2\u00a1\u01fa\3\2\2\2\u00a3\u0204\3\2"+
		"\2\2\u00a5\u0210\3\2\2\2\u00a7\u0215\3\2\2\2\u00a9\u00aa\7B\2\2\u00aa"+
		"\4\3\2\2\2\u00ab\u00ac\7*\2\2\u00ac\6\3\2\2\2\u00ad\u00ae\7+\2\2\u00ae"+
		"\b\3\2\2\2\u00af\u00b0\7\60\2\2\u00b0\n\3\2\2\2\u00b1\u00b2\7}\2\2\u00b2"+
		"\f\3\2\2\2\u00b3\u00b4\7\177\2\2\u00b4\16\3\2\2\2\u00b5\u00b6\7<\2\2\u00b6"+
		"\20\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\u00b9\7@\2\2\u00b9\22\3\2\2\2\u00ba"+
		"\u00bb\7)\2\2\u00bb\24\3\2\2\2\u00bc\u00bd\7]\2\2\u00bd\26\3\2\2\2\u00be"+
		"\u00bf\7_\2\2\u00bf\30\3\2\2\2\u00c0\u00c1\t\2\2\2\u00c1\32\3\2\2\2\u00c2"+
		"\u00c6\t\3\2\2\u00c3\u00c4\7\61\2\2\u00c4\u00c6\7\61\2\2\u00c5\u00c2\3"+
		"\2\2\2\u00c5\u00c3\3\2\2\2\u00c6\34\3\2\2\2\u00c7\u00c8\7e\2\2\u00c8\u00c9"+
		"\7n\2\2\u00c9\u00ca\7c\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7u\2\2\u00cc"+
		"\36\3\2\2\2\u00cd\u00ce\7f\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7h\2\2\u00d0"+
		" \3\2\2\2\u00d1\u00d2\7t\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7v\2\2\u00d4"+
		"\u00d5\7w\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7\7p\2\2\u00d7\"\3\2\2\2\u00d8"+
		"\u00d9\7e\2\2\u00d9\u00da\7q\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7v\2\2"+
		"\u00dc\u00dd\7k\2\2\u00dd\u00de\7p\2\2\u00de\u00df\7w\2\2\u00df\u00e0"+
		"\7g\2\2\u00e0$\3\2\2\2\u00e1\u00e2\7h\2\2\u00e2\u00e3\7q\2\2\u00e3\u00e4"+
		"\7t\2\2\u00e4&\3\2\2\2\u00e5\u00e6\7y\2\2\u00e6\u00e7\7j\2\2\u00e7\u00e8"+
		"\7k\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea\7g\2\2\u00ea(\3\2\2\2\u00eb\u00ec"+
		"\7d\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7c\2\2\u00ef"+
		"\u00f0\7m\2\2\u00f0*\3\2\2\2\u00f1\u00f2\7k\2\2\u00f2\u00f3\7p\2\2\u00f3"+
		",\3\2\2\2\u00f4\u00f5\7k\2\2\u00f5\u00f6\7h\2\2\u00f6.\3\2\2\2\u00f7\u00f8"+
		"\7g\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa\7u\2\2\u00fa\u00fb\7g\2\2\u00fb"+
		"\60\3\2\2\2\u00fc\u00fd\7g\2\2\u00fd\u00fe\7n\2\2\u00fe\u00ff\7k\2\2\u00ff"+
		"\u0100\7h\2\2\u0100\62\3\2\2\2\u0101\u0102\7p\2\2\u0102\u0103\7q\2\2\u0103"+
		"\u0104\7v\2\2\u0104\64\3\2\2\2\u0105\u0106\7c\2\2\u0106\u0107\7p\2\2\u0107"+
		"\u0108\7f\2\2\u0108\66\3\2\2\2\u0109\u010a\7q\2\2\u010a\u010b\7t\2\2\u010b"+
		"8\3\2\2\2\u010c\u010d\7f\2\2\u010d\u010e\7g\2\2\u010e\u010f\7n\2\2\u010f"+
		":\3\2\2\2\u0110\u0111\7v\2\2\u0111\u0112\7j\2\2\u0112\u0113\7k\2\2\u0113"+
		"\u0114\7u\2\2\u0114<\3\2\2\2\u0115\u0116\7h\2\2\u0116\u0117\7t\2\2\u0117"+
		"\u0118\7q\2\2\u0118\u0119\7o\2\2\u0119>\3\2\2\2\u011a\u011b\7k\2\2\u011b"+
		"\u011c\7o\2\2\u011c\u011d\7r\2\2\u011d\u011e\7q\2\2\u011e\u011f\7t\2\2"+
		"\u011f\u0120\7v\2\2\u0120@\3\2\2\2\u0121\u0122\7c\2\2\u0122\u0123\7u\2"+
		"\2\u0123B\3\2\2\2\u0124\u0125\7i\2\2\u0125\u0126\7n\2\2\u0126\u0127\7"+
		"q\2\2\u0127\u0128\7d\2\2\u0128\u0129\7c\2\2\u0129\u012a\7n\2\2\u012aD"+
		"\3\2\2\2\u012b\u012c\7k\2\2\u012c\u012d\7u\2\2\u012dF\3\2\2\2\u012e\u012f"+
		"\7P\2\2\u012f\u0130\7q\2\2\u0130\u0131\7p\2\2\u0131\u0132\7g\2\2\u0132"+
		"H\3\2\2\2\u0133\u0134\7V\2\2\u0134\u0135\7t\2\2\u0135\u0136\7w\2\2\u0136"+
		"\u0137\7g\2\2\u0137J\3\2\2\2\u0138\u0139\7H\2\2\u0139\u013a\7c\2\2\u013a"+
		"\u013b\7n\2\2\u013b\u013c\7u\2\2\u013c\u013d\7g\2\2\u013dL\3\2\2\2\u013e"+
		"\u0141\5W,\2\u013f\u0141\5O(\2\u0140\u013e\3\2\2\2\u0140\u013f\3\2\2\2"+
		"\u0141N\3\2\2\2\u0142\u0144\5\u00a5S\2\u0143\u0142\3\2\2\2\u0144\u0145"+
		"\3\2\2\2\u0145\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0147\3\2\2\2\u0147"+
		"\u0149\7\60\2\2\u0148\u014a\5\u00a5S\2\u0149\u0148\3\2\2\2\u014a\u014b"+
		"\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d"+
		"\u014f\5\u00a7T\2\u014e\u014d\3\2\2\2\u014e\u014f\3\2\2\2\u014fP\3\2\2"+
		"\2\u0150\u0155\7)\2\2\u0151\u0152\t\4\2\2\u0152\u0153\4\64:\2\u0153\u0156"+
		"\t\5\2\2\u0154\u0156\t\6\2\2\u0155\u0151\3\2\2\2\u0155\u0154\3\2\2\2\u0156"+
		"\u0157\3\2\2\2\u0157\u0158\7)\2\2\u0158R\3\2\2\2\u0159\u015a\5U+\2\u015a"+
		"T\3\2\2\2\u015b\u015f\t\7\2\2\u015c\u015e\t\b\2\2\u015d\u015c\3\2\2\2"+
		"\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160V\3"+
		"\2\2\2\u0161\u015f\3\2\2\2\u0162\u0166\5Y-\2\u0163\u0166\5[.\2\u0164\u0166"+
		"\5]/\2\u0165\u0162\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0164\3\2\2\2\u0166"+
		"X\3\2\2\2\u0167\u016b\5_\60\2\u0168\u016a\5\u00a5S\2\u0169\u0168\3\2\2"+
		"\2\u016a\u016d\3\2\2\2\u016b\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u0170"+
		"\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u0170\7\62\2\2\u016f\u0167\3\2\2\2"+
		"\u016f\u016e\3\2\2\2\u0170Z\3\2\2\2\u0171\u0172\7\62\2\2\u0172\u0174\t"+
		"\t\2\2\u0173\u0175\5a\61\2\u0174\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176"+
		"\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u017f\3\2\2\2\u0178\u017a\7\62"+
		"\2\2\u0179\u017b\5a\61\2\u017a\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c"+
		"\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017f\3\2\2\2\u017e\u0171\3\2"+
		"\2\2\u017e\u0178\3\2\2\2\u017f\\\3\2\2\2\u0180\u0181\7\62\2\2\u0181\u0183"+
		"\t\n\2\2\u0182\u0184\5c\62\2\u0183\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185"+
		"\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186^\3\2\2\2\u0187\u0188\t\13\2\2"+
		"\u0188`\3\2\2\2\u0189\u018a\t\f\2\2\u018ab\3\2\2\2\u018b\u018c\t\r\2\2"+
		"\u018cd\3\2\2\2\u018d\u018e\7-\2\2\u018e\u018f\7?\2\2\u018ff\3\2\2\2\u0190"+
		"\u0191\7/\2\2\u0191\u0192\7?\2\2\u0192h\3\2\2\2\u0193\u0194\7,\2\2\u0194"+
		"\u0195\7?\2\2\u0195j\3\2\2\2\u0196\u0197\7\61\2\2\u0197\u0198\7?\2\2\u0198"+
		"l\3\2\2\2\u0199\u019a\7\'\2\2\u019a\u019b\7?\2\2\u019bn\3\2\2\2\u019c"+
		"\u019d\7,\2\2\u019d\u019e\7,\2\2\u019ep\3\2\2\2\u019f\u01a0\7,\2\2\u01a0"+
		"r\3\2\2\2\u01a1\u01a2\7\61\2\2\u01a2t\3\2\2\2\u01a3\u01a4\7-\2\2\u01a4"+
		"v\3\2\2\2\u01a5\u01a6\7/\2\2\u01a6x\3\2\2\2\u01a7\u01a8\7\'\2\2\u01a8"+
		"z\3\2\2\2\u01a9\u01aa\7?\2\2\u01aa\u01ab\7?\2\2\u01ab|\3\2\2\2\u01ac\u01ad"+
		"\7#\2\2\u01ad\u01ae\7?\2\2\u01ae~\3\2\2\2\u01af\u01b0\7>\2\2\u01b0\u01b1"+
		"\7?\2\2\u01b1\u0080\3\2\2\2\u01b2\u01b3\7@\2\2\u01b3\u01b4\7?\2\2\u01b4"+
		"\u0082\3\2\2\2\u01b5\u01b6\7?\2\2\u01b6\u0084\3\2\2\2\u01b7\u01b8\7>\2"+
		"\2\u01b8\u0086\3\2\2\2\u01b9\u01ba\7@\2\2\u01ba\u0088\3\2\2\2\u01bb\u01bc"+
		"\7%\2\2\u01bc\u008a\3\2\2\2\u01bd\u01be\7\u0080\2\2\u01be\u008c\3\2\2"+
		"\2\u01bf\u01c0\7.\2\2\u01c0\u008e\3\2\2\2\u01c1\u01c2\7=\2\2\u01c2\u0090"+
		"\3\2\2\2\u01c3\u01c4\7$\2\2\u01c4\u01c5\5\u0093J\2\u01c5\u01c6\7$\2\2"+
		"\u01c6\u0092\3\2\2\2\u01c7\u01ca\5\u0095K\2\u01c8\u01ca\n\16\2\2\u01c9"+
		"\u01c7\3\2\2\2\u01c9\u01c8\3\2\2\2\u01ca\u01cd\3\2\2\2\u01cb\u01c9\3\2"+
		"\2\2\u01cb\u01cc\3\2\2\2\u01cc\u0094\3\2\2\2\u01cd\u01cb\3\2\2\2\u01ce"+
		"\u01cf\7^\2\2\u01cf\u01d0\t\16\2\2\u01d0\u0096\3\2\2\2\u01d1\u01d8\5\u009f"+
		"P\2\u01d2\u01d8\5\u009bN\2\u01d3\u01d8\5\u009dO\2\u01d4\u01d8\5\u00a3"+
		"R\2\u01d5\u01d8\5\u00a1Q\2\u01d6\u01d8\5\u0099M\2\u01d7\u01d1\3\2\2\2"+
		"\u01d7\u01d2\3\2\2\2\u01d7\u01d3\3\2\2\2\u01d7\u01d4\3\2\2\2\u01d7\u01d5"+
		"\3\2\2\2\u01d7\u01d6\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d9\u01da\bL\2\2\u01da"+
		"\u0098\3\2\2\2\u01db\u01dd\t\17\2\2\u01dc\u01db\3\2\2\2\u01dd\u01de\3"+
		"\2\2\2\u01de\u01dc\3\2\2\2\u01de\u01df\3\2\2\2\u01df\u009a\3\2\2\2\u01e0"+
		"\u01e1\7\61\2\2\u01e1\u01e2\7&\2\2\u01e2\u01e6\3\2\2\2\u01e3\u01e5\13"+
		"\2\2\2\u01e4\u01e3\3\2\2\2\u01e5\u01e8\3\2\2\2\u01e6\u01e7\3\2\2\2\u01e6"+
		"\u01e4\3\2\2\2\u01e7\u01e9\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e9\u01ea\7&"+
		"\2\2\u01ea\u01eb\7\61\2\2\u01eb\u009c\3\2\2\2\u01ec\u01ed\7&\2\2\u01ed"+
		"\u01ee\7&\2\2\u01ee\u01f2\3\2\2\2\u01ef\u01f1\n\17\2\2\u01f0\u01ef\3\2"+
		"\2\2\u01f1\u01f4\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f2\u01f3\3\2\2\2\u01f3"+
		"\u009e\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f5\u01f7\t\20\2\2\u01f6\u01f5\3"+
		"\2\2\2\u01f7\u01f8\3\2\2\2\u01f8\u01f6\3\2\2\2\u01f8\u01f9\3\2\2\2\u01f9"+
		"\u00a0\3\2\2\2\u01fa\u01fe\7~\2\2\u01fb\u01fd\5\u009fP\2\u01fc\u01fb\3"+
		"\2\2\2\u01fd\u0200\3\2\2\2\u01fe\u01fc\3\2\2\2\u01fe\u01ff\3\2\2\2\u01ff"+
		"\u0202\3\2\2\2\u0200\u01fe\3\2\2\2\u0201\u0203\7.\2\2\u0202\u0201\3\2"+
		"\2\2\u0202\u0203\3\2\2\2\u0203\u00a2\3\2\2\2\u0204\u0206\7^\2\2\u0205"+
		"\u0207\5\u009fP\2\u0206\u0205\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u020d"+
		"\3\2\2\2\u0208\u020a\7\17\2\2\u0209\u0208\3\2\2\2\u0209\u020a\3\2\2\2"+
		"\u020a\u020b\3\2\2\2\u020b\u020e\7\f\2\2\u020c\u020e\7\17\2\2\u020d\u0209"+
		"\3\2\2\2\u020d\u020c\3\2\2\2\u020e\u00a4\3\2\2\2\u020f\u0211\4\62;\2\u0210"+
		"\u020f\3\2\2\2\u0211\u0212\3\2\2\2\u0212\u0210\3\2\2\2\u0212\u0213\3\2"+
		"\2\2\u0213\u00a6\3\2\2\2\u0214\u0216\t\2\2\2\u0215\u0214\3\2\2\2\u0215"+
		"\u0216\3\2\2\2\u0216\u0218\3\2\2\2\u0217\u0219\5\u00a5S\2\u0218\u0217"+
		"\3\2\2\2\u0219\u021a\3\2\2\2\u021a\u0218\3\2\2\2\u021a\u021b\3\2\2\2\u021b"+
		"\u00a8\3\2\2\2 \2\u00c5\u0140\u0145\u014b\u014e\u0155\u015f\u0165\u016b"+
		"\u016f\u0176\u017c\u017e\u0185\u01c9\u01cb\u01d7\u01de\u01e6\u01f2\u01f8"+
		"\u01fe\u0202\u0206\u0209\u020d\u0212\u0215\u021a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}